node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cond/Switch"
  op: "Switch"
  input: "IsVariableInitialized"
  input: "IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/switch_t"
  op: "Identity"
  input: "cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/switch_f"
  op: "Identity"
  input: "cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/pred_id"
  op: "Identity"
  input: "IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/read"
  op: "Identity"
  input: "cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Merge"
  op: "Merge"
  input: "cond/Switch_1"
  input: "cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "cond/Merge"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 1000
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 250
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 403
          }
        }
        shape {
          dim {
            size: 43
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "enqueue_input/Placeholder"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_1"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_2"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "enqueue_input/Placeholder"
  input: "enqueue_input/Placeholder_1"
  input: "enqueue_input/Placeholder_2"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/sub/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 250
      }
    }
  }
}
node {
  name: "enqueue_input/sub"
  op: "Sub"
  input: "enqueue_input/random_shuffle_queue_Size"
  input: "enqueue_input/sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum"
  op: "Maximum"
  input: "enqueue_input/Maximum/x"
  input: "enqueue_input/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Cast"
  op: "Cast"
  input: "enqueue_input/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0013333333190530539
      }
    }
  }
}
node {
  name: "enqueue_input/mul"
  op: "Mul"
  input: "enqueue_input/Cast"
  input: "enqueue_input/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  op: "ScalarSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  input: "enqueue_input/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueUpTo/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueUpTo"
  op: "QueueDequeueUpToV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "random_shuffle_queue_DequeueUpTo/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 43
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "random_shuffle_queue_DequeueUpTo:1"
  input: "^add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "embedding/embeddings/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\304\t\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "embedding/embeddings/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.047781847417354584
      }
    }
  }
}
node {
  name: "embedding/embeddings/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047781847417354584
      }
    }
  }
}
node {
  name: "embedding/embeddings/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "embedding/embeddings/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "embedding/embeddings/Initializer/random_uniform/sub"
  op: "Sub"
  input: "embedding/embeddings/Initializer/random_uniform/max"
  input: "embedding/embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "embedding/embeddings/Initializer/random_uniform/mul"
  op: "Mul"
  input: "embedding/embeddings/Initializer/random_uniform/RandomUniform"
  input: "embedding/embeddings/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "embedding/embeddings/Initializer/random_uniform"
  op: "Add"
  input: "embedding/embeddings/Initializer/random_uniform/mul"
  input: "embedding/embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "embedding/embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2500
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "embedding/embeddings/Assign"
  op: "Assign"
  input: "embedding/embeddings"
  input: "embedding/embeddings/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "embedding/embeddings/read"
  op: "Identity"
  input: "embedding/embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "embedding/embedding_lookup"
  op: "Gather"
  input: "embedding/embeddings/read"
  input: "random_shuffle_queue_DequeueUpTo:1"
  input: "^add"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/max"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/read"
  op: "Identity"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "embedding/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Cast"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Less"
  op: "Less"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/add"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Cast_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/range"
  op: "Range"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/range/start"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Rank"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/range"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/add_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Prod"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "embedding/embedding_lookup"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/read"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Const_2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/read"
  op: "Identity"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "embedding/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Cast"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Cast_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/range/start"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/range"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Prod"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "embedding/embedding_lookup"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/read"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Const_2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/read"
  op: "Identity"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "embedding/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Cast"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Cast_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/range/start"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/range"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Prod"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "embedding/embedding_lookup"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/read"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Const_2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/strided_slice"
  op: "StridedSlice"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/strided_slice/stack"
  input: "encoder_stack/encoder/scaled_dot_product_attention/strided_slice/stack_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/ToFloat"
  op: "Cast"
  input: "encoder_stack/encoder/scaled_dot_product_attention/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Rsqrt"
  op: "Rsqrt"
  input: "encoder_stack/encoder/scaled_dot_product_attention/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/mul"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/MatMul"
  op: "BatchMatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Shape_1"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Shape_2"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Sub/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Sub"
  op: "Sub"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Rank"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Slice/begin"
  op: "Pack"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Slice/size"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Slice"
  op: "Slice"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Shape_2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Slice/begin"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/concat/values_0"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/concat"
  op: "ConcatV2"
  input: "encoder_stack/encoder/scaled_dot_product_attention/concat/values_0"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Slice"
  input: "encoder_stack/encoder/scaled_dot_product_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Reshape"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/MatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/Softmax"
  op: "Softmax"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/attention_weights"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Softmax"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/MatMul_1"
  op: "BatchMatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/attention_weights"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add"
  op: "Add"
  input: "embedding/embedding_lookup"
  input: "encoder_stack/encoder/scaled_dot_product_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  op: "Square"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  op: "Sum"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum"
  op: "Maximum"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/strided_slice"
  op: "StridedSlice"
  input: "encoder_stack/encoder/feed_forward/Shape"
  input: "encoder_stack/encoder/feed_forward/strided_slice/stack"
  input: "encoder_stack/encoder/feed_forward/strided_slice/stack_1"
  input: "encoder_stack/encoder/feed_forward/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/strided_slice_1/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/strided_slice_1/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/strided_slice_1/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/strided_slice_1"
  op: "StridedSlice"
  input: "encoder_stack/encoder/feed_forward/Shape"
  input: "encoder_stack/encoder/feed_forward/strided_slice_1/stack"
  input: "encoder_stack/encoder/feed_forward/strided_slice_1/stack_1"
  input: "encoder_stack/encoder/feed_forward/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/mul"
  op: "Mul"
  input: "encoder_stack/encoder/feed_forward/strided_slice"
  input: "encoder_stack/encoder/feed_forward/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/Reshape/shape/1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/Reshape/shape"
  op: "Pack"
  input: "encoder_stack/encoder/feed_forward/mul"
  input: "encoder_stack/encoder/feed_forward/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/Reshape"
  op: "Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize"
  input: "encoder_stack/encoder/feed_forward/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/max"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/mul"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/kernel"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/bias"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/MatMul"
  op: "MatMul"
  input: "encoder_stack/encoder/feed_forward/Reshape"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/BiasAdd"
  op: "BiasAdd"
  input: "encoder_stack/encoder/feed_forward/dense/MatMul"
  input: "encoder_stack/encoder/feed_forward/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/Relu"
  op: "Relu"
  input: "encoder_stack/encoder/feed_forward/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/max"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/mul"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_2/MatMul"
  op: "MatMul"
  input: "encoder_stack/encoder/feed_forward/dense/Relu"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder_stack/encoder/feed_forward/dense_2/MatMul"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/Reshape_1/shape/2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/Reshape_1/shape"
  op: "Pack"
  input: "encoder_stack/encoder/feed_forward/strided_slice"
  input: "encoder_stack/encoder/feed_forward/strided_slice_1"
  input: "encoder_stack/encoder/feed_forward/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/Reshape_1"
  op: "Reshape"
  input: "encoder_stack/encoder/feed_forward/dense_2/BiasAdd"
  input: "encoder_stack/encoder/feed_forward/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/layer_norm/Add"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize"
  input: "encoder_stack/encoder/feed_forward/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Square"
  op: "Square"
  input: "encoder_stack/encoder/feed_forward/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum"
  op: "Sum"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Square"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum"
  op: "Maximum"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize"
  op: "Mul"
  input: "encoder_stack/encoder/feed_forward/layer_norm/Add"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/max"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Cast"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Less"
  op: "Less"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/add"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Cast_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/range"
  op: "Range"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/range/start"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Rank"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/range"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/add_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Prod"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/read"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Const_2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Cast"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Cast_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/range/start"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/range"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Prod"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/read"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const_2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Cast"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Cast_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/range/start"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/range"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Prod"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/read"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const_2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/strided_slice"
  op: "StridedSlice"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/strided_slice/stack"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/strided_slice/stack_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/ToFloat"
  op: "Cast"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Rsqrt"
  op: "Rsqrt"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/mul"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/MatMul"
  op: "BatchMatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Shape_1"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Shape_2"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Sub/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Sub"
  op: "Sub"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Rank"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Slice/begin"
  op: "Pack"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Slice/size"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Slice"
  op: "Slice"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Shape_2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Slice/begin"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/concat/values_0"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/concat"
  op: "ConcatV2"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/concat/values_0"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Slice"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Reshape"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/MatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/Softmax"
  op: "Softmax"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/attention_weights"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Softmax"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1"
  op: "BatchMatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/attention_weights"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add"
  op: "Add"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  op: "Square"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  op: "Sum"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum"
  op: "Maximum"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/strided_slice"
  op: "StridedSlice"
  input: "encoder_stack/encoder_1/feed_forward/Shape"
  input: "encoder_stack/encoder_1/feed_forward/strided_slice/stack"
  input: "encoder_stack/encoder_1/feed_forward/strided_slice/stack_1"
  input: "encoder_stack/encoder_1/feed_forward/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/strided_slice_1/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/strided_slice_1/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/strided_slice_1/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/strided_slice_1"
  op: "StridedSlice"
  input: "encoder_stack/encoder_1/feed_forward/Shape"
  input: "encoder_stack/encoder_1/feed_forward/strided_slice_1/stack"
  input: "encoder_stack/encoder_1/feed_forward/strided_slice_1/stack_1"
  input: "encoder_stack/encoder_1/feed_forward/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/mul"
  op: "Mul"
  input: "encoder_stack/encoder_1/feed_forward/strided_slice"
  input: "encoder_stack/encoder_1/feed_forward/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/Reshape/shape/1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/Reshape/shape"
  op: "Pack"
  input: "encoder_stack/encoder_1/feed_forward/mul"
  input: "encoder_stack/encoder_1/feed_forward/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/Reshape"
  op: "Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  input: "encoder_stack/encoder_1/feed_forward/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/max"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/mul"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/MatMul"
  op: "MatMul"
  input: "encoder_stack/encoder_1/feed_forward/Reshape"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/BiasAdd"
  op: "BiasAdd"
  input: "encoder_stack/encoder_1/feed_forward/dense/MatMul"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/Relu"
  op: "Relu"
  input: "encoder_stack/encoder_1/feed_forward/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/max"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/mul"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_2/MatMul"
  op: "MatMul"
  input: "encoder_stack/encoder_1/feed_forward/dense/Relu"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder_stack/encoder_1/feed_forward/dense_2/MatMul"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/Reshape_1/shape/2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/Reshape_1/shape"
  op: "Pack"
  input: "encoder_stack/encoder_1/feed_forward/strided_slice"
  input: "encoder_stack/encoder_1/feed_forward/strided_slice_1"
  input: "encoder_stack/encoder_1/feed_forward/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/Reshape_1"
  op: "Reshape"
  input: "encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd"
  input: "encoder_stack/encoder_1/feed_forward/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/layer_norm/Add"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  input: "encoder_stack/encoder_1/feed_forward/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Square"
  op: "Square"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum"
  op: "Sum"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Square"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum"
  op: "Maximum"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize"
  op: "Mul"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/Add"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ones/shape/1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ones/shape"
  op: "Pack"
  input: "strided_slice"
  input: "ones/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ones/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ones"
  op: "Fill"
  input: "ones/shape"
  input: "ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros/shape/1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "zeros/shape"
  op: "Pack"
  input: "strided_slice"
  input: "zeros/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "zeros/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zeros"
  op: "Fill"
  input: "zeros/shape"
  input: "zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "ones"
  input: "mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "mul"
  input: "random_shuffle_queue_DequeueUpTo:2"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "embedding_1/embeddings/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\304\t\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "embedding_1/embeddings/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.047781847417354584
      }
    }
  }
}
node {
  name: "embedding_1/embeddings/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047781847417354584
      }
    }
  }
}
node {
  name: "embedding_1/embeddings/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "embedding_1/embeddings/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "embedding_1/embeddings/Initializer/random_uniform/sub"
  op: "Sub"
  input: "embedding_1/embeddings/Initializer/random_uniform/max"
  input: "embedding_1/embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "embedding_1/embeddings/Initializer/random_uniform/mul"
  op: "Mul"
  input: "embedding_1/embeddings/Initializer/random_uniform/RandomUniform"
  input: "embedding_1/embeddings/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "embedding_1/embeddings/Initializer/random_uniform"
  op: "Add"
  input: "embedding_1/embeddings/Initializer/random_uniform/mul"
  input: "embedding_1/embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "embedding_1/embeddings"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2500
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "embedding_1/embeddings/Assign"
  op: "Assign"
  input: "embedding_1/embeddings"
  input: "embedding_1/embeddings/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "embedding_1/embeddings/read"
  op: "Identity"
  input: "embedding_1/embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "embedding_1/embedding_lookup"
  op: "Gather"
  input: "embedding_1/embeddings/read"
  input: "concat"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "embedding_1/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Cast_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/range/start"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Rank"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/add_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "embedding_1/embedding_lookup"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/read"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/transpose_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/Const_2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "embedding_1/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Cast_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/range/start"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "embedding_1/embedding_lookup"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/read"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/Const_2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "embedding_1/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Cast_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/range/start"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "embedding_1/embedding_lookup"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/read"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/Const_2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/strided_slice/stack"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/strided_slice/stack_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/ToFloat"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Rsqrt"
  op: "Rsqrt"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/Tensordot"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/ones/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/ones"
  op: "Fill"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Shape_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/mul_1/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1000000000.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/ones"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/MatrixBandPart/num_lower"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/MatrixBandPart/num_upper"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/MatrixBandPart"
  op: "MatrixBandPart"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/mul_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/MatrixBandPart/num_lower"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/MatrixBandPart/num_upper"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Add"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/MatrixBandPart"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Shape_2"
  op: "Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Shape_3"
  op: "Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Sub/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Sub"
  op: "Sub"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Rank"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Slice/begin"
  op: "Pack"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Slice/size"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Slice"
  op: "Slice"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Shape_3"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Slice/begin"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/concat/values_0"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/concat/values_0"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Slice"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/Softmax"
  op: "Softmax"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/attention_weights"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Softmax"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/attention_weights"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_3/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/Add"
  op: "Add"
  input: "embedding_1/embedding_lookup"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  op: "Square"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  op: "Sum"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum"
  op: "Maximum"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Cast_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/range/start"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Rank"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/add_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/read"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/transpose_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/Const_2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Cast_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/range/start"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Rank"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/add_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/read"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/Const_2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Cast_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/range/start"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Rank"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/range"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Gather_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/ListDiff"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/add_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Prod"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/read"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/Const_2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/strided_slice"
  op: "StridedSlice"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/strided_slice/stack"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/strided_slice/stack_1"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/ToFloat"
  op: "Cast"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Rsqrt"
  op: "Rsqrt"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/Tensordot"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/MatMul"
  op: "BatchMatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Shape_2"
  op: "Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Sub/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Sub"
  op: "Sub"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Rank"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Slice/begin"
  op: "Pack"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Slice/size"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Slice"
  op: "Slice"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Shape_2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Slice/begin"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/concat/values_0"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/concat/values_0"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Slice"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/MatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/Softmax"
  op: "Softmax"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/attention_weights"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Softmax"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/MatMul_1"
  op: "BatchMatMul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/attention_weights"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_3/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/Add"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square"
  op: "Square"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum"
  op: "Sum"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum"
  op: "Maximum"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize"
  op: "Mul"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/strided_slice"
  op: "StridedSlice"
  input: "decoder_stack/dcoder/feed_forward/Shape"
  input: "decoder_stack/dcoder/feed_forward/strided_slice/stack"
  input: "decoder_stack/dcoder/feed_forward/strided_slice/stack_1"
  input: "decoder_stack/dcoder/feed_forward/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/strided_slice_1/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/strided_slice_1/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/strided_slice_1/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/strided_slice_1"
  op: "StridedSlice"
  input: "decoder_stack/dcoder/feed_forward/Shape"
  input: "decoder_stack/dcoder/feed_forward/strided_slice_1/stack"
  input: "decoder_stack/dcoder/feed_forward/strided_slice_1/stack_1"
  input: "decoder_stack/dcoder/feed_forward/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/feed_forward/strided_slice"
  input: "decoder_stack/dcoder/feed_forward/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/Reshape/shape/1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/Reshape/shape"
  op: "Pack"
  input: "decoder_stack/dcoder/feed_forward/mul"
  input: "decoder_stack/dcoder/feed_forward/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder/feed_forward/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/bias/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder/feed_forward/dense/bias"
  input: "decoder_stack/dcoder/feed_forward/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/bias/read"
  op: "Identity"
  input: "decoder_stack/dcoder/feed_forward/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder/feed_forward/Reshape"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder_stack/dcoder/feed_forward/dense/MatMul"
  input: "decoder_stack/dcoder/feed_forward/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense/Relu"
  op: "Relu"
  input: "decoder_stack/dcoder/feed_forward/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder/feed_forward/dense_1/bias"
  input: "decoder_stack/dcoder/feed_forward/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_1/bias/read"
  op: "Identity"
  input: "decoder_stack/dcoder/feed_forward/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_2/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder/feed_forward/dense/Relu"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder_stack/dcoder/feed_forward/dense_2/MatMul"
  input: "decoder_stack/dcoder/feed_forward/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/Reshape_1/shape/2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/Reshape_1/shape"
  op: "Pack"
  input: "decoder_stack/dcoder/feed_forward/strided_slice"
  input: "decoder_stack/dcoder/feed_forward/strided_slice_1"
  input: "decoder_stack/dcoder/feed_forward/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder/feed_forward/dense_2/BiasAdd"
  input: "decoder_stack/dcoder/feed_forward/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/layer_norm/Add"
  op: "Add"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder/feed_forward/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Square"
  op: "Square"
  input: "decoder_stack/dcoder/feed_forward/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Sum"
  op: "Sum"
  input: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Square"
  input: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Maximum"
  op: "Maximum"
  input: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Sum"
  input: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize"
  op: "Mul"
  input: "decoder_stack/dcoder/feed_forward/layer_norm/Add"
  input: "decoder_stack/dcoder/feed_forward/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "embedding_1/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Cast_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/range/start"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Rank"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/add_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "embedding_1/embedding_lookup"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/read"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Const_2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "embedding_1/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Cast_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/range/start"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Rank"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/add_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "embedding_1/embedding_lookup"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/read"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Const_2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "embedding_1/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Cast_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/range/start"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Rank"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/add_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "embedding_1/embedding_lookup"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/read"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Const_2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/strided_slice/stack"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/strided_slice/stack_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/ToFloat"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Rsqrt"
  op: "Rsqrt"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/ones/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/ones"
  op: "Fill"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Shape_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1000000000.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/ones"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart/num_lower"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart/num_upper"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart"
  op: "MatrixBandPart"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart/num_lower"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart/num_upper"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Shape_2"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Shape_3"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Sub/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Sub"
  op: "Sub"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Rank"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Slice/begin"
  op: "Pack"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Slice/size"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Slice"
  op: "Slice"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Shape_3"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Slice/begin"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/concat/values_0"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/concat/values_0"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Slice"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax"
  op: "Softmax"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/attention_weights"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/attention_weights"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add"
  op: "Add"
  input: "embedding_1/embedding_lookup"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  op: "Square"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  op: "Sum"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum"
  op: "Maximum"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Cast_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/range/start"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Rank"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/add_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/read"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Const_2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Cast_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/range/start"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Rank"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/add_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/read"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Const_2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/axes"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Cast_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/range/start"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Rank"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/range"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Gather_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/ListDiff"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/add_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Prod"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/read"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Gather"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Const_2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/strided_slice"
  op: "StridedSlice"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/strided_slice/stack"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/strided_slice/stack_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/ToFloat"
  op: "Cast"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Rsqrt"
  op: "Rsqrt"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul"
  op: "BatchMatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Shape_2"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Sub/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Sub"
  op: "Sub"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Rank"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Slice/begin"
  op: "Pack"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Slice/size"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Slice"
  op: "Slice"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Shape_2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Slice/begin"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/concat/values_0"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/concat"
  op: "ConcatV2"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/concat/values_0"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Slice"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax"
  op: "Softmax"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/attention_weights"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1"
  op: "BatchMatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/attention_weights"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square"
  op: "Square"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum"
  op: "Sum"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum"
  op: "Maximum"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/strided_slice"
  op: "StridedSlice"
  input: "decoder_stack/dcoder_1/feed_forward/Shape"
  input: "decoder_stack/dcoder_1/feed_forward/strided_slice/stack"
  input: "decoder_stack/dcoder_1/feed_forward/strided_slice/stack_1"
  input: "decoder_stack/dcoder_1/feed_forward/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/strided_slice_1/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/strided_slice_1/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/strided_slice_1/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/strided_slice_1"
  op: "StridedSlice"
  input: "decoder_stack/dcoder_1/feed_forward/Shape"
  input: "decoder_stack/dcoder_1/feed_forward/strided_slice_1/stack"
  input: "decoder_stack/dcoder_1/feed_forward/strided_slice_1/stack_1"
  input: "decoder_stack/dcoder_1/feed_forward/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/feed_forward/strided_slice"
  input: "decoder_stack/dcoder_1/feed_forward/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/Reshape/shape/1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/Reshape/shape"
  op: "Pack"
  input: "decoder_stack/dcoder_1/feed_forward/mul"
  input: "decoder_stack/dcoder_1/feed_forward/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/Reshape"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder_1/feed_forward/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/feed_forward/Reshape"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder_stack/dcoder_1/feed_forward/dense/MatMul"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/Relu"
  op: "Relu"
  input: "decoder_stack/dcoder_1/feed_forward/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_2/MatMul"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/feed_forward/dense/Relu"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder_stack/dcoder_1/feed_forward/dense_2/MatMul"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/Reshape_1/shape/2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/Reshape_1/shape"
  op: "Pack"
  input: "decoder_stack/dcoder_1/feed_forward/strided_slice"
  input: "decoder_stack/dcoder_1/feed_forward/strided_slice_1"
  input: "decoder_stack/dcoder_1/feed_forward/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/Reshape_1"
  op: "Reshape"
  input: "decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd"
  input: "decoder_stack/dcoder_1/feed_forward/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/layer_norm/Add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize"
  input: "decoder_stack/dcoder_1/feed_forward/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Square"
  op: "Square"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum"
  op: "Sum"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Square"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum"
  op: "Maximum"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize"
  op: "Mul"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/Add"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\304\t\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.047781847417354584
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047781847417354584
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 2500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "Assign"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/read"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2500
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "Assign"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/read"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "dense/Tensordot/axes"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dense/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "dense/Tensordot/axes"
  input: "dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Cast"
  op: "Cast"
  input: "dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/mul"
  op: "Mul"
  input: "dense/Tensordot/Cast"
  input: "dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Less/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/Less"
  op: "Less"
  input: "dense/Tensordot/axes"
  input: "dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Cast_1"
  op: "Cast"
  input: "dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/add"
  op: "Add"
  input: "dense/Tensordot/axes"
  input: "dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/mul_1"
  op: "Mul"
  input: "dense/Tensordot/Cast_1"
  input: "dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/add_1"
  op: "Add"
  input: "dense/Tensordot/mul"
  input: "dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense/Tensordot/range"
  op: "Range"
  input: "dense/Tensordot/range/start"
  input: "dense/Tensordot/Rank"
  input: "dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "dense/Tensordot/range"
  input: "dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Gather"
  op: "Gather"
  input: "dense/Tensordot/Shape"
  input: "dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dense/Tensordot/Gather_1"
  op: "Gather"
  input: "dense/Tensordot/Shape"
  input: "dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dense/Tensordot/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/Prod"
  op: "Prod"
  input: "dense/Tensordot/Gather"
  input: "dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense/Tensordot/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/Prod_1"
  op: "Prod"
  input: "dense/Tensordot/Gather_1"
  input: "dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense/Tensordot/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat"
  op: "ConcatV2"
  input: "dense/Tensordot/Gather_1"
  input: "dense/Tensordot/Gather"
  input: "dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "dense/Tensordot/ListDiff"
  input: "dense/Tensordot/add_1"
  input: "dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/stack"
  op: "Pack"
  input: "dense/Tensordot/Prod"
  input: "dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize"
  input: "dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Reshape"
  op: "Reshape"
  input: "dense/Tensordot/transpose"
  input: "dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "dense/kernel/read"
  input: "dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\304\t\000\000"
      }
    }
  }
}
node {
  name: "dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "dense/Tensordot/transpose_1"
  input: "dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/MatMul"
  op: "MatMul"
  input: "dense/Tensordot/Reshape"
  input: "dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/Tensordot/Const_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2500
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_2/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "dense/Tensordot/Gather"
  input: "dense/Tensordot/Const_2"
  input: "dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot"
  op: "Reshape"
  input: "dense/Tensordot/MatMul"
  input: "dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/Tensordot"
  input: "dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "random_shuffle_queue_DequeueUpTo:2"
  input: "zeros"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Shape"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  op: "Shape"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Rank"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/sub/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/sub"
  op: "Sub"
  input: "SparseSoftmaxCrossEntropyWithLogits/Rank"
  input: "SparseSoftmaxCrossEntropyWithLogits/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/add/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/add"
  op: "Add"
  input: "SparseSoftmaxCrossEntropyWithLogits/sub"
  input: "SparseSoftmaxCrossEntropyWithLogits/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  op: "Pack"
  input: "SparseSoftmaxCrossEntropyWithLogits/sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  op: "Pack"
  input: "SparseSoftmaxCrossEntropyWithLogits/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  op: "StridedSlice"
  input: "SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  input: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  input: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  op: "Pack"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  input: "SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape"
  op: "Reshape"
  input: "dense/BiasAdd"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  op: "Reshape"
  input: "concat_1"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  op: "Reshape"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "SparseSoftmaxCrossEntropyWithLogits/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss"
  op: "Mean"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Reshape/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Shape"
  op: "Shape"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss_grad/Tile"
  op: "Tile"
  input: "gradients/loss_grad/Reshape"
  input: "gradients/loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Shape_1"
  op: "Shape"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss_grad/Shape_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Prod"
  op: "Prod"
  input: "gradients/loss_grad/Shape_1"
  input: "gradients/loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss_grad/Const_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Prod_1"
  op: "Prod"
  input: "gradients/loss_grad/Shape_2"
  input: "gradients/loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss_grad/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Maximum"
  op: "Maximum"
  input: "gradients/loss_grad/Prod_1"
  input: "gradients/loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/loss_grad/Prod"
  input: "gradients/loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/Cast"
  op: "Cast"
  input: "gradients/loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/loss_grad/truediv"
  op: "RealDiv"
  input: "gradients/loss_grad/Tile"
  input: "gradients/loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss_grad/truediv"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  op: "Shape"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  input: "^gradients/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot_grad/Shape"
  op: "Shape"
  input: "dense/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dense/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/dense/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense/Tensordot_grad/Reshape"
  input: "dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense/Tensordot/Reshape"
  input: "gradients/dense/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/dense/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "dense/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dense/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/dense/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\304\t\000\000"
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/dense/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/dense/Tensordot/Reshape_grad/Reshape"
  input: "gradients/dense/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/dense/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/dense/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/mul"
  op: "Mul"
  input: "gradients/dense/Tensordot/transpose_grad/transpose"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/mul"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/Add"
  input: "gradients/dense/Tensordot/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/mul_1"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select"
  op: "Select"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select_1"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/add"
  op: "Add"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/add"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range"
  op: "Range"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range/start"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill/value"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape_1"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/mod"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul/x"
  op: "Const"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul/x"
  input: "decoder_stack/dcoder_1/feed_forward/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Tile"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder_1/feed_forward/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/Reshape_1_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/Reshape_1_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/Reshape_1_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/feed_forward/dense/Relu"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/tuple/control_dependency"
  input: "decoder_stack/dcoder_1/feed_forward/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense/Relu_grad/ReluGrad"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense/Relu_grad/ReluGrad"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/dense/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/tuple/control_dependency"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/feed_forward/Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/Reshape_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/feed_forward/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/feed_forward/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/mul"
  op: "Mul"
  input: "gradients/AddN_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/mul_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Select"
  op: "Select"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/zeros"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Select"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Select_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Size"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum/reduction_indices"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/add"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/range"
  op: "Range"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/range/start"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Size"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Fill/value"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/range"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/mod"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square_grad/mul/x"
  op: "Const"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square_grad/mul"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square_grad/mul/x"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Sum_grad/Tile"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/tuple/control_dependency_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/MatMul_1"
  op: "BatchMatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/attention_weights"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/attention_weights_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/attention_weights_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/attention_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/attention_weights_grad/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/Reshape/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/attention_weights_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/sub"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot_grad/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Reshape_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Softmax_grad/mul_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Reshape_grad/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Reshape_grad/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/mul"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/tuple/control_dependency"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/mul_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/Rsqrt"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot_grad/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/mul_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot_grad/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_grad/transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape_1"
  op: "Shape"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/mul"
  op: "Mul"
  input: "gradients/AddN_3"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/mul"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Sum"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/Add"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Sum_1"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/mul_1"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Sum_1"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select"
  op: "Select"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select_1"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/add"
  op: "Add"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/add"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range"
  op: "Range"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range/start"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill/value"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape_1"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/range"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/mod"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul/x"
  op: "Const"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul"
  op: "Mul"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul/x"
  input: "encoder_stack/encoder_1/feed_forward/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Sum_grad/Tile"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul"
  op: "Mul"
  input: "gradients/AddN_4"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Shape_1"
  op: "Shape"
  input: "encoder_stack/encoder_1/feed_forward/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Sum"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_5"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Sum_1"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/Reshape_1_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder_1/feed_forward/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select"
  op: "Select"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/encoder_stack/encoder_1/feed_forward/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/Reshape_1_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/Reshape_1_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/add"
  op: "Add"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/add"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range"
  op: "Range"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/start"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill/value"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/mod"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_stack/encoder_1/feed_forward/dense/Relu"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul/x"
  op: "Const"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul/x"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Tile"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/tuple/control_dependency"
  input: "encoder_stack/encoder_1/feed_forward/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape"
  op: "Shape"
  input: "embedding_1/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_6"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_6"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense/Relu_grad/ReluGrad"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense/Relu_grad/ReluGrad"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/dense/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
  op: "BatchMatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/attention_weights"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/tuple/control_dependency"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_stack/encoder_1/feed_forward/Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/attention_weights_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/attention_weights_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/attention_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/Reshape_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/feed_forward/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/feed_forward/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/attention_weights_grad/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/Reshape/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/attention_weights_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/sub"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot_grad/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Reshape_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Softmax_grad/mul_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/feed_forward/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/feed_forward/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape_1"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul"
  op: "Mul"
  input: "gradients/AddN_7"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum_1"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Shape_1"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Reshape_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Reshape_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart_grad/MatrixBandPart"
  op: "MatrixBandPart"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/tuple/control_dependency"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart/num_lower"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart/num_upper"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select"
  op: "Select"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart_grad/MatrixBandPart"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/ones"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatrixBandPart_grad/MatrixBandPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/mul_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/add"
  op: "Add"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/add"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range"
  op: "Range"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/start"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill/value"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/mod"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/ones_grad/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/ones_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_1_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/ones_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul/x"
  op: "Const"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul"
  op: "Mul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul/x"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Tile"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape_1"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Sum_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/tuple/control_dependency_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Add_grad/tuple/control_dependency_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
  op: "BatchMatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/attention_weights"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Shape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/mul"
  op: "Mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Sum"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/mul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/mul_1"
  op: "Mul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/mul_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Sum_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Reshape_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Reshape"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Reshape_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/attention_weights_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/attention_weights_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/attention_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/Rsqrt"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot_grad/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/attention_weights_grad/Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/mul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/Reshape/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/attention_weights_grad/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/sub"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot_grad/Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Reshape_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Softmax_grad/mul_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/mul_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot_grad/Reshape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Reshape_grad/Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Reshape_grad/Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Shape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/mul"
  op: "Mul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/mul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/mul_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Sum_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Reshape"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/Rsqrt"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot_grad/Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/transpose"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\304\t\000\000\000\000\000\000\200\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "gradients/embedding_1/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/Size"
  op: "Size"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/embedding_1/embedding_lookup_grad/Size"
  input: "gradients/embedding_1/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/embedding_1/embedding_lookup_grad/ToInt32"
  input: "gradients/embedding_1/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/embedding_1/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/embedding_1/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "gradients/embedding_1/embedding_lookup_grad/ExpandDims"
  input: "gradients/embedding_1/embedding_lookup_grad/strided_slice"
  input: "gradients/embedding_1/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_9"
  input: "gradients/embedding_1/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding_1/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "concat"
  input: "gradients/embedding_1/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/mul_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot_grad/Reshape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/transpose"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/transpose"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder_1/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/feed_forward/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Shape_1"
  op: "Shape"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Shape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/mul"
  op: "Mul"
  input: "gradients/AddN_10"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/mul"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Sum"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder/feed_forward/layer_norm/Add"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Sum_1"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/mul_1"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Sum_1"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Rsqrt"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select"
  op: "Select"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/zeros"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Select_1"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/add"
  op: "Add"
  input: "encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum/reduction_indices"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/add"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/range"
  op: "Range"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/range/start"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Size"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill/value"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape_1"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/range"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/mod"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Square_grad/mul/x"
  op: "Const"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Square_grad/mul"
  op: "Mul"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Square_grad/mul/x"
  input: "encoder_stack/encoder/feed_forward/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Sum_grad/Tile"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Shape_1"
  op: "Shape"
  input: "encoder_stack/encoder/feed_forward/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Shape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Sum"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Sum_1"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/Reshape_1_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/feed_forward/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder/feed_forward/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/encoder_stack/encoder/feed_forward/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/feed_forward/Reshape_1_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/Reshape_1_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_stack/encoder/feed_forward/dense/Relu"
  input: "gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/tuple/control_dependency"
  input: "encoder_stack/encoder/feed_forward/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/encoder_stack/encoder/feed_forward/dense/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense/Relu_grad/ReluGrad"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/dense/Relu_grad/ReluGrad"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/dense/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/tuple/control_dependency"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_stack/encoder/feed_forward/Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/Reshape_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/feed_forward/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/feed_forward/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/feed_forward/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/feed_forward/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape_1"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul"
  op: "Mul"
  input: "gradients/AddN_12"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum_1"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/mul_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Sum_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_2"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select"
  op: "Select"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/zeros"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Select_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Sum_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/add"
  op: "Add"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum/reduction_indices"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/add"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/start"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/delta"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range"
  op: "Range"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/start"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Size"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill/value"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/range"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/mod"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Maximum_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul/x"
  op: "Const"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul"
  op: "Mul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul/x"
  input: "encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Sum_grad/Tile"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Shape"
  op: "Shape"
  input: "embedding/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Shape_1"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Shape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_13"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_13"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Sum_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
  op: "BatchMatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/attention_weights"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/attention_weights_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/attention_weights_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/attention_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/attention_weights_grad/Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/mul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/Reshape/shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/attention_weights_grad/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/sub"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot_grad/Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Reshape_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Softmax_grad/mul_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 403
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_grad/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Reshape_grad/Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Reshape_grad/Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Shape_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Shape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/mul"
  op: "Mul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Sum"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/mul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/mul_1"
  op: "Mul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/mul_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Sum_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Reshape_1"
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Reshape"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Reshape_1"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "encoder_stack/encoder/scaled_dot_product_attention/Rsqrt"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot_grad/Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/mul_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot_grad/Reshape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_grad/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/tuple/control_dependency"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_grad/transpose"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_grad/transpose"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/encoder_stack/encoder/scaled_dot_product_attention/layer_norm/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 403
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/Shape"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\304\t\000\000\000\000\000\000\200\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "gradients/embedding/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/Size"
  op: "Size"
  input: "random_shuffle_queue_DequeueUpTo:1"
  input: "^add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/embedding/embedding_lookup_grad/Size"
  input: "gradients/embedding/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/embedding/embedding_lookup_grad/ToInt32"
  input: "gradients/embedding/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/embedding/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/embedding/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/concat/axis"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "gradients/embedding/embedding_lookup_grad/ExpandDims"
  input: "gradients/embedding/embedding_lookup_grad/strided_slice"
  input: "gradients/embedding/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_14"
  input: "gradients/embedding/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "random_shuffle_queue_DequeueUpTo:1"
  input: "gradients/embedding/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "embedding/embeddings/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "embedding/embeddings/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2500
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "embedding/embeddings/Adam/Assign"
  op: "Assign"
  input: "embedding/embeddings/Adam"
  input: "embedding/embeddings/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "embedding/embeddings/Adam/read"
  op: "Identity"
  input: "embedding/embeddings/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "embedding/embeddings/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "embedding/embeddings/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2500
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "embedding/embeddings/Adam_1/Assign"
  op: "Assign"
  input: "embedding/embeddings/Adam_1"
  input: "embedding/embeddings/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "embedding/embeddings/Adam_1/read"
  op: "Identity"
  input: "embedding/embeddings/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1/read"
  op: "Identity"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "embedding_1/embeddings/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "embedding_1/embeddings/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2500
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "embedding_1/embeddings/Adam/Assign"
  op: "Assign"
  input: "embedding_1/embeddings/Adam"
  input: "embedding_1/embeddings/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "embedding_1/embeddings/Adam/read"
  op: "Identity"
  input: "embedding_1/embeddings/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "embedding_1/embeddings/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "embedding_1/embeddings/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2500
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "embedding_1/embeddings/Adam_1/Assign"
  op: "Assign"
  input: "embedding_1/embeddings/Adam_1"
  input: "embedding_1/embeddings/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "embedding_1/embeddings/Adam_1/read"
  op: "Identity"
  input: "embedding_1/embeddings/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1/read"
  op: "Identity"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 2500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Adam/Assign"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Adam/read"
  op: "Identity"
  input: "dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 2500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Adam_1/read"
  op: "Identity"
  input: "dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2500
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Adam/Assign"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Adam/read"
  op: "Identity"
  input: "dense/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2500
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Adam_1/read"
  op: "Identity"
  input: "dense/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  input: "^add"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/Unique"
  op: "Unique"
  input: "gradients/embedding/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/Shape"
  op: "Shape"
  input: "Adam/update_embedding/embeddings/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/strided_slice"
  op: "StridedSlice"
  input: "Adam/update_embedding/embeddings/Shape"
  input: "Adam/update_embedding/embeddings/strided_slice/stack"
  input: "Adam/update_embedding/embeddings/strided_slice/stack_1"
  input: "Adam/update_embedding/embeddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "gradients/embedding/embedding_lookup_grad/Reshape"
  input: "Adam/update_embedding/embeddings/Unique:1"
  input: "Adam/update_embedding/embeddings/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/sub/x"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/sub"
  op: "Sub"
  input: "Adam/update_embedding/embeddings/sub/x"
  input: "beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/Sqrt"
  op: "Sqrt"
  input: "Adam/update_embedding/embeddings/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/mul"
  op: "Mul"
  input: "Adam/learning_rate"
  input: "Adam/update_embedding/embeddings/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/sub_1/x"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/sub_1"
  op: "Sub"
  input: "Adam/update_embedding/embeddings/sub_1/x"
  input: "beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/truediv"
  op: "RealDiv"
  input: "Adam/update_embedding/embeddings/mul"
  input: "Adam/update_embedding/embeddings/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/sub_2/x"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/sub_2"
  op: "Sub"
  input: "Adam/update_embedding/embeddings/sub_2/x"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/mul_1"
  op: "Mul"
  input: "Adam/update_embedding/embeddings/UnsortedSegmentSum"
  input: "Adam/update_embedding/embeddings/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/mul_2"
  op: "Mul"
  input: "embedding/embeddings/Adam/read"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/Assign"
  op: "Assign"
  input: "embedding/embeddings/Adam"
  input: "Adam/update_embedding/embeddings/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/ScatterAdd"
  op: "ScatterAdd"
  input: "embedding/embeddings/Adam"
  input: "Adam/update_embedding/embeddings/Unique"
  input: "Adam/update_embedding/embeddings/mul_1"
  input: "^Adam/update_embedding/embeddings/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/mul_3"
  op: "Mul"
  input: "Adam/update_embedding/embeddings/UnsortedSegmentSum"
  input: "Adam/update_embedding/embeddings/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/sub_3/x"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/sub_3"
  op: "Sub"
  input: "Adam/update_embedding/embeddings/sub_3/x"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/mul_4"
  op: "Mul"
  input: "Adam/update_embedding/embeddings/mul_3"
  input: "Adam/update_embedding/embeddings/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/mul_5"
  op: "Mul"
  input: "embedding/embeddings/Adam_1/read"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/Assign_1"
  op: "Assign"
  input: "embedding/embeddings/Adam_1"
  input: "Adam/update_embedding/embeddings/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/ScatterAdd_1"
  op: "ScatterAdd"
  input: "embedding/embeddings/Adam_1"
  input: "Adam/update_embedding/embeddings/Unique"
  input: "Adam/update_embedding/embeddings/mul_4"
  input: "^Adam/update_embedding/embeddings/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/Sqrt_1"
  op: "Sqrt"
  input: "Adam/update_embedding/embeddings/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/mul_6"
  op: "Mul"
  input: "Adam/update_embedding/embeddings/truediv"
  input: "Adam/update_embedding/embeddings/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/add"
  op: "Add"
  input: "Adam/update_embedding/embeddings/Sqrt_1"
  input: "Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/truediv_1"
  op: "RealDiv"
  input: "Adam/update_embedding/embeddings/mul_6"
  input: "Adam/update_embedding/embeddings/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/AssignSub"
  op: "AssignSub"
  input: "embedding/embeddings"
  input: "Adam/update_embedding/embeddings/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_embedding/embeddings/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^Adam/update_embedding/embeddings/AssignSub"
  input: "^Adam/update_embedding/embeddings/ScatterAdd"
  input: "^Adam/update_embedding/embeddings/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder/feed_forward/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder/feed_forward/dense/kernel"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder/feed_forward/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder/feed_forward/dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder/feed_forward/dense/bias"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder/feed_forward/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder/feed_forward/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder/feed_forward/dense_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder/feed_forward/dense_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder_1/feed_forward/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder_1/feed_forward/dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder_1/feed_forward/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_encoder_stack/encoder_1/feed_forward/dense_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/encoder_stack/encoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/Unique"
  op: "Unique"
  input: "gradients/embedding_1/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/Shape"
  op: "Shape"
  input: "Adam/update_embedding_1/embeddings/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/strided_slice/stack"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/strided_slice/stack_1"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/strided_slice/stack_2"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/strided_slice"
  op: "StridedSlice"
  input: "Adam/update_embedding_1/embeddings/Shape"
  input: "Adam/update_embedding_1/embeddings/strided_slice/stack"
  input: "Adam/update_embedding_1/embeddings/strided_slice/stack_1"
  input: "Adam/update_embedding_1/embeddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "gradients/embedding_1/embedding_lookup_grad/Reshape"
  input: "Adam/update_embedding_1/embeddings/Unique:1"
  input: "Adam/update_embedding_1/embeddings/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/sub/x"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/sub"
  op: "Sub"
  input: "Adam/update_embedding_1/embeddings/sub/x"
  input: "beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/Sqrt"
  op: "Sqrt"
  input: "Adam/update_embedding_1/embeddings/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/mul"
  op: "Mul"
  input: "Adam/learning_rate"
  input: "Adam/update_embedding_1/embeddings/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/sub_1/x"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/sub_1"
  op: "Sub"
  input: "Adam/update_embedding_1/embeddings/sub_1/x"
  input: "beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/truediv"
  op: "RealDiv"
  input: "Adam/update_embedding_1/embeddings/mul"
  input: "Adam/update_embedding_1/embeddings/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/sub_2/x"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/sub_2"
  op: "Sub"
  input: "Adam/update_embedding_1/embeddings/sub_2/x"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/mul_1"
  op: "Mul"
  input: "Adam/update_embedding_1/embeddings/UnsortedSegmentSum"
  input: "Adam/update_embedding_1/embeddings/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/mul_2"
  op: "Mul"
  input: "embedding_1/embeddings/Adam/read"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/Assign"
  op: "Assign"
  input: "embedding_1/embeddings/Adam"
  input: "Adam/update_embedding_1/embeddings/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/ScatterAdd"
  op: "ScatterAdd"
  input: "embedding_1/embeddings/Adam"
  input: "Adam/update_embedding_1/embeddings/Unique"
  input: "Adam/update_embedding_1/embeddings/mul_1"
  input: "^Adam/update_embedding_1/embeddings/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/mul_3"
  op: "Mul"
  input: "Adam/update_embedding_1/embeddings/UnsortedSegmentSum"
  input: "Adam/update_embedding_1/embeddings/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/sub_3/x"
  op: "Const"
  input: "^add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/sub_3"
  op: "Sub"
  input: "Adam/update_embedding_1/embeddings/sub_3/x"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/mul_4"
  op: "Mul"
  input: "Adam/update_embedding_1/embeddings/mul_3"
  input: "Adam/update_embedding_1/embeddings/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/mul_5"
  op: "Mul"
  input: "embedding_1/embeddings/Adam_1/read"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/Assign_1"
  op: "Assign"
  input: "embedding_1/embeddings/Adam_1"
  input: "Adam/update_embedding_1/embeddings/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/ScatterAdd_1"
  op: "ScatterAdd"
  input: "embedding_1/embeddings/Adam_1"
  input: "Adam/update_embedding_1/embeddings/Unique"
  input: "Adam/update_embedding_1/embeddings/mul_4"
  input: "^Adam/update_embedding_1/embeddings/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/Sqrt_1"
  op: "Sqrt"
  input: "Adam/update_embedding_1/embeddings/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/mul_6"
  op: "Mul"
  input: "Adam/update_embedding_1/embeddings/truediv"
  input: "Adam/update_embedding_1/embeddings/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/add"
  op: "Add"
  input: "Adam/update_embedding_1/embeddings/Sqrt_1"
  input: "Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/truediv_1"
  op: "RealDiv"
  input: "Adam/update_embedding_1/embeddings/mul_6"
  input: "Adam/update_embedding_1/embeddings/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/AssignSub"
  op: "AssignSub"
  input: "embedding_1/embeddings"
  input: "Adam/update_embedding_1/embeddings/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_embedding_1/embeddings/group_deps"
  op: "NoOp"
  input: "^add"
  input: "^Adam/update_embedding_1/embeddings/AssignSub"
  input: "^Adam/update_embedding_1/embeddings/ScatterAdd"
  input: "^Adam/update_embedding_1/embeddings/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
}
node {
  name: "Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention/dense_3/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_3/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_decoder_stack/dcoder_1/feed_forward/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_decoder_stack/dcoder_1/feed_forward/dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_decoder_stack/dcoder_1/feed_forward/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_decoder_stack/dcoder_1/feed_forward/dense_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/decoder_stack/dcoder_1/feed_forward/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_embedding/embeddings/group_deps"
  input: "^Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense/bias/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense_1/bias/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense/bias/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense_1/bias/ApplyAdam"
  input: "^Adam/update_embedding_1/embeddings/group_deps"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense/bias/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense_1/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  input: "^Adam/update_dense/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_embedding/embeddings/group_deps"
  input: "^Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense/bias/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense_1/bias/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense/bias/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense_1/bias/ApplyAdam"
  input: "^Adam/update_embedding_1/embeddings/group_deps"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense/bias/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense_1/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  input: "^Adam/update_dense/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^add"
  input: "^Adam/update_embedding/embeddings/group_deps"
  input: "^Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense/bias/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder/feed_forward/dense_1/bias/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense/bias/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_encoder_stack/encoder_1/feed_forward/dense_1/bias/ApplyAdam"
  input: "^Adam/update_embedding_1/embeddings/group_deps"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense/bias/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_decoder_stack/dcoder_1/feed_forward/dense_1/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  input: "^Adam/update_dense/bias/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^add"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_1"
      }
    }
  }
}
node {
  name: "loss_1"
  op: "ScalarSummary"
  input: "loss_1/tags"
  input: "loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^embedding/embeddings/Assign"
  input: "^encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Assign"
  input: "^encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Assign"
  input: "^encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense/kernel/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense/bias/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense_1/kernel/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense_1/bias/Assign"
  input: "^encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Assign"
  input: "^encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Assign"
  input: "^encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense/kernel/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense/bias/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense_1/kernel/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense_1/bias/Assign"
  input: "^embedding_1/embeddings/Assign"
  input: "^decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel/Assign"
  input: "^decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel/Assign"
  input: "^decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel/Assign"
  input: "^decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel/Assign"
  input: "^decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel/Assign"
  input: "^decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel/Assign"
  input: "^decoder_stack/dcoder/feed_forward/dense/kernel/Assign"
  input: "^decoder_stack/dcoder/feed_forward/dense/bias/Assign"
  input: "^decoder_stack/dcoder/feed_forward/dense_1/kernel/Assign"
  input: "^decoder_stack/dcoder/feed_forward/dense_1/bias/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense/kernel/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense/bias/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense_1/bias/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense/bias/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^embedding/embeddings/Adam/Assign"
  input: "^embedding/embeddings/Adam_1/Assign"
  input: "^encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam/Assign"
  input: "^encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1/Assign"
  input: "^encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam/Assign"
  input: "^encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1/Assign"
  input: "^encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam/Assign"
  input: "^encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense/kernel/Adam/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense/kernel/Adam_1/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense/bias/Adam/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense/bias/Adam_1/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense_1/kernel/Adam/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense_1/bias/Adam/Assign"
  input: "^encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1/Assign"
  input: "^encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam/Assign"
  input: "^encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1/Assign"
  input: "^encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam/Assign"
  input: "^encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1/Assign"
  input: "^encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam/Assign"
  input: "^encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense/kernel/Adam/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense/bias/Adam/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam/Assign"
  input: "^encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1/Assign"
  input: "^embedding_1/embeddings/Adam/Assign"
  input: "^embedding_1/embeddings/Adam_1/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam/Assign"
  input: "^decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense/bias/Adam/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam/Assign"
  input: "^decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1/Assign"
  input: "^dense/kernel/Adam/Assign"
  input: "^dense/kernel/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "embedding/embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "embedding_1/embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/feed_forward/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/feed_forward/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "embedding/embeddings/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "embedding/embeddings/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "embedding_1/embeddings/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "embedding_1/embeddings/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 97
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 97
          }
        }
        string_val: "global_step"
        string_val: "embedding/embeddings"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel"
        string_val: "encoder_stack/encoder/feed_forward/dense/bias"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
        string_val: "embedding_1/embeddings"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
        string_val: "decoder_stack/dcoder/feed_forward/dense/kernel"
        string_val: "decoder_stack/dcoder/feed_forward/dense/bias"
        string_val: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
        string_val: "decoder_stack/dcoder/feed_forward/dense_1/bias"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "embedding/embeddings/Adam"
        string_val: "embedding/embeddings/Adam_1"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
        string_val: "embedding_1/embeddings/Adam"
        string_val: "embedding_1/embeddings/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 97
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 97
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_2"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "embedding/embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "embedding_1/embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/feed_forward/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder/feed_forward/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "embedding/embeddings/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "embedding/embeddings/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "embedding_1/embeddings/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "embedding_1/embeddings/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_54"
  input: "report_uninitialized_variables_1/IsVariableInitialized_55"
  input: "report_uninitialized_variables_1/IsVariableInitialized_56"
  input: "report_uninitialized_variables_1/IsVariableInitialized_57"
  input: "report_uninitialized_variables_1/IsVariableInitialized_58"
  input: "report_uninitialized_variables_1/IsVariableInitialized_59"
  input: "report_uninitialized_variables_1/IsVariableInitialized_60"
  input: "report_uninitialized_variables_1/IsVariableInitialized_61"
  input: "report_uninitialized_variables_1/IsVariableInitialized_62"
  input: "report_uninitialized_variables_1/IsVariableInitialized_63"
  input: "report_uninitialized_variables_1/IsVariableInitialized_64"
  input: "report_uninitialized_variables_1/IsVariableInitialized_65"
  input: "report_uninitialized_variables_1/IsVariableInitialized_66"
  input: "report_uninitialized_variables_1/IsVariableInitialized_67"
  input: "report_uninitialized_variables_1/IsVariableInitialized_68"
  input: "report_uninitialized_variables_1/IsVariableInitialized_69"
  input: "report_uninitialized_variables_1/IsVariableInitialized_70"
  input: "report_uninitialized_variables_1/IsVariableInitialized_71"
  input: "report_uninitialized_variables_1/IsVariableInitialized_72"
  input: "report_uninitialized_variables_1/IsVariableInitialized_73"
  input: "report_uninitialized_variables_1/IsVariableInitialized_74"
  input: "report_uninitialized_variables_1/IsVariableInitialized_75"
  input: "report_uninitialized_variables_1/IsVariableInitialized_76"
  input: "report_uninitialized_variables_1/IsVariableInitialized_77"
  input: "report_uninitialized_variables_1/IsVariableInitialized_78"
  input: "report_uninitialized_variables_1/IsVariableInitialized_79"
  input: "report_uninitialized_variables_1/IsVariableInitialized_80"
  input: "report_uninitialized_variables_1/IsVariableInitialized_81"
  input: "report_uninitialized_variables_1/IsVariableInitialized_82"
  input: "report_uninitialized_variables_1/IsVariableInitialized_83"
  input: "report_uninitialized_variables_1/IsVariableInitialized_84"
  input: "report_uninitialized_variables_1/IsVariableInitialized_85"
  input: "report_uninitialized_variables_1/IsVariableInitialized_86"
  input: "report_uninitialized_variables_1/IsVariableInitialized_87"
  input: "report_uninitialized_variables_1/IsVariableInitialized_88"
  input: "report_uninitialized_variables_1/IsVariableInitialized_89"
  input: "report_uninitialized_variables_1/IsVariableInitialized_90"
  input: "report_uninitialized_variables_1/IsVariableInitialized_91"
  input: "report_uninitialized_variables_1/IsVariableInitialized_92"
  input: "report_uninitialized_variables_1/IsVariableInitialized_93"
  input: "report_uninitialized_variables_1/IsVariableInitialized_94"
  input: "report_uninitialized_variables_1/IsVariableInitialized_95"
  input: "report_uninitialized_variables_1/IsVariableInitialized_96"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 97
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 97
          }
        }
        string_val: "global_step"
        string_val: "embedding/embeddings"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel"
        string_val: "encoder_stack/encoder/feed_forward/dense/bias"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
        string_val: "embedding_1/embeddings"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
        string_val: "decoder_stack/dcoder/feed_forward/dense/kernel"
        string_val: "decoder_stack/dcoder/feed_forward/dense/bias"
        string_val: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
        string_val: "decoder_stack/dcoder/feed_forward/dense_1/bias"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "embedding/embeddings/Adam"
        string_val: "embedding/embeddings/Adam_1"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
        string_val: "embedding_1/embeddings/Adam"
        string_val: "embedding_1/embeddings/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 97
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 97
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  input: "loss_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_05a34ca8c8d5442c840bb29769aa926f/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 97
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "decoder_stack/dcoder/feed_forward/dense/bias"
        string_val: "decoder_stack/dcoder/feed_forward/dense/kernel"
        string_val: "decoder_stack/dcoder/feed_forward/dense_1/bias"
        string_val: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "embedding/embeddings"
        string_val: "embedding/embeddings/Adam"
        string_val: "embedding/embeddings/Adam_1"
        string_val: "embedding_1/embeddings"
        string_val: "embedding_1/embeddings/Adam"
        string_val: "embedding_1/embeddings/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense/bias"
        string_val: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel"
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 97
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 97
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "decoder_stack/dcoder/feed_forward/dense/bias"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel"
  input: "decoder_stack/dcoder/feed_forward/dense_1/bias"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "embedding/embeddings"
  input: "embedding/embeddings/Adam"
  input: "embedding/embeddings/Adam_1"
  input: "embedding_1/embeddings"
  input: "embedding_1/embeddings/Adam"
  input: "embedding_1/embeddings/Adam_1"
  input: "encoder_stack/encoder/feed_forward/dense/bias"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
  input: "encoder_stack/encoder/feed_forward/dense/kernel"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder/feed_forward/dense/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "decoder_stack/dcoder/feed_forward/dense/bias"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "decoder_stack/dcoder/feed_forward/dense/kernel"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder/feed_forward/dense_1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "decoder_stack/dcoder/feed_forward/dense_1/bias"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "decoder_stack/dcoder/feed_forward/dense_1/kernel"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/bias/Adam_1"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense/kernel/Adam_1"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/bias/Adam_1"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "decoder_stack/dcoder_1/feed_forward/dense_1/kernel/Adam_1"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel/Adam_1"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel/Adam_1"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel/Adam_1"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder_stack/dcoder_1/scaled_dot_product_attention_1/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "dense/bias"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "dense/kernel"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "embedding/embeddings"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "embedding/embeddings"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "embedding/embeddings/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "embedding/embeddings/Adam"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "embedding/embeddings/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "embedding/embeddings/Adam_1"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "embedding_1/embeddings"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "embedding_1/embeddings"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "embedding_1/embeddings/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "embedding_1/embeddings/Adam"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "embedding_1/embeddings/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "embedding_1/embeddings/Adam_1"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding_1/embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2500
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/bias"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/bias/Adam_1"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/kernel"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense/kernel/Adam_1"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/bias/Adam_1"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "encoder_stack/encoder/feed_forward/dense_1/kernel/Adam_1"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/bias/Adam_1"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense/kernel/Adam_1"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/bias/Adam_1"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "encoder_stack/encoder_1/feed_forward/dense_1/kernel/Adam_1"
  input: "save/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/feed_forward/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
  input: "save/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam"
  input: "save/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel/Adam_1"
  input: "save/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
  input: "save/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam"
  input: "save/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel/Adam_1"
  input: "save/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
  input: "save/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam"
  input: "save/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel/Adam_1"
  input: "save/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_stack/encoder_1/scaled_dot_product_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 24
}
